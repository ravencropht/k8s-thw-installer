---

- name: Create the Kubernetes configuration directory
  file:
    path: /etc/kubernetes/config
    state: directory
    recurse: yes

- name: Stop controlplane services
  systemd:
    name: "{{ item }}"
    state: stopped
  loop:
    - kube-apiserver.service
    - kube-controller-manager.service
    - kube-scheduler.service
  when: kubernetes_upgrade | bool

- name: Delete old kubernetes binaries
  file:
    path: "/usr/local/bin/{{ item }}"
    state: absent
  loop:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
  when: kubernetes_upgrade | bool

- name: Download controlplane binaries
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubernetes_version }}/bin/linux/amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
  loop:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: Copy systemd kube-controller-manager unit
  copy:
    src: kube-controller-manager.service
    dest: /etc/systemd/system/kube-controller-manager.service
  notify: Restart kube-controller-manager

- name: Copy systemd kube-scheduler unit
  copy:
    src: kube-scheduler.service
    dest: /etc/systemd/system/kube-scheduler.service
  notify: Restart kube-scheduler 

- name: Copy systemd kube-apiserver unit
  template:
    src: kube-apiserver.service.j2
    dest: /etc/systemd/system/kube-apiserver.service
  notify: Restart kube-apiserver

- name: Copy kube-scheduller config
  copy:
    src: kube-scheduler.yaml
    dest: /etc/kubernetes/config/kube-scheduler.yaml
  notify: Restart kube-apiserver

- name: Start controlplane services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
    daemon_reload: yes
  loop:
    - kube-apiserver.service
    - kube-controller-manager.service
    - kube-scheduler.service