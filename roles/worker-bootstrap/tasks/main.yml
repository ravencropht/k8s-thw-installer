---

- name: Create worker dirs
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  loop:
    - /etc/cni/net.d
    - /var/lib/kubernetes

- name: Install dependencies
  apt:
    name:
      - socat
      - conntrack
      - ipset
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'

- name: Install dependencies
  yum:
    name:
      - socat
      - conntrack
      - ipset
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == 'RedHat'

- name: Stop worker services
  systemd: 
    name: "{{ item }}"
    state: stopped
    daemon_reload: yes
    enabled: yes
  loop:
    - kubelet
    - kube-proxy
  when: kubernetes_upgrade | bool

- name: Delete old kubernetes binaries
  file:
    path: "/usr/local/bin/{{ item }}"
    state: absent
  loop:
    - kubelet
    - kube-proxy
  when: kubernetes_upgrade | bool

- name: Download worker binaries
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubernetes_version }}/bin/linux/amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
  loop:
    - kube-proxy
    - kubelet

# - name: Copy 10-bridge.conf
#   template:
#     src: 10-bridge.conf.j2
#     dest: /etc/cni/net.d/10-bridge.conf

- name: Copy kubelet config
  template:
    src: kubelet-config.yaml.j2
    dest: /var/lib/kubernetes/kubelet-config.yaml
  notify: Restart kubelet

- name: Copy kubelet service unit
  copy:
    src: kubelet.service
    dest: /etc/systemd/system/kubelet.service
  notify: Restart kubelet

- name: Copy kube-proxy config
  copy:
    src: kube-proxy-config.yaml
    dest: /var/lib/kubernetes/kube-proxy-config.yaml
  notify: Restart kube-proxy

- name: Copy kube-proxy service unit
  copy:
    src: kube-proxy.service
    dest: /etc/systemd/system/kube-proxy.service
  notify: Restart kube-proxy

- name: Start worker services
  systemd: 
    name: "{{ item }}"
    state: started
    daemon_reload: yes
    enabled: yes
  loop:
    - kubelet
    - kube-proxy